# Release task for PbLib projects
# See https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema for reference

trigger:
  branches:
    include:
      - refs/tags/*
pr: none

variables:
  - name: githubConnectionName
    value: KpiReleaseNotes
  - name: projectName
    value: kpi-dashboard
  - name: githubRepositoryName
    value: petabridge/kpi-dashboard

stages:
  - stage: Pulumi
    jobs:
    - deployment: "pulumi_deploy"
      displayName: "Pulumi App Deployment"
      environment: kpi-collector
      pool:
        vmImage: vs2017-win2016
      variables:
        - group: PulumiKeys
        - name: pulumi.access.token
          value: $(pulumiaccesstoken)
        - name: pulumiVersion
          value: 3.2.1
      strategy:
        runOnce:      
          deploy:
            steps:
            - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
              clean: false  # whether to fetch clean each time
              submodules: recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
              persistCredentials: true

            - task: AzureCLI@2
              displayName: Azure CLI
              inputs:
                azureSubscription: "pbstripe - Azure"
                scriptType: bash
                scriptLocation: inlineScript
                addSpnToEnvironment: true # emits ServicePrincipal data into environment
                inlineScript: |
                  ARM_SUBSCRIPTION_ID=$(az account show --query 'id' --output tsv)
                  echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]${ARM_SUBSCRIPTION_ID}"
                  echo "##vso[task.setvariable variable=AZURE_CLIENT_ID]${servicePrincipalId}"
                  echo "##vso[task.setvariable variable=AZURE_CLIENT_SECRET]${servicePrincipalKey}"
                  echo "##vso[task.setvariable variable=AZURE_TENANT_ID]${tenantId}"

            - task: CmdLine@2
              displayName: Publish Code
              inputs:
                script: "build.cmd BuildRelease"
              continueOnError: false

            - task: Pulumi@1
              displayName: "Pulumi Up"
              inputs:
                azureSubscription: "SdkbinInfrastructure"
                args: --skip-preview --yes
                command: "up" # set the Docker tag version equal to the current release tag
                cwd: "src/Petabridge.Collector.Infra"
                stack: "petabridge/Petabridge.Collector.Infra/dev" #do QA cluster
                versionSpec: $(pulumiVersion)
              env:
                AZURE_KEYVAULT_AUTH_VIA_CLI: false

  - stage: AzureFunction
    jobs:
    - deployment: "function_deploy"
      displayName: "Azure Function Deployment"
      environment: kpi-collector
      pool:
        vmImage: vs2017-win2016
      strategy:
        runOnce:      
          deploy:
            steps:
            - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
              clean: false  # whether to fetch clean each time
              submodules: recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
              persistCredentials: true

            - task: CmdLine@2
              displayName: Publish Code
              inputs:
                script: "build.cmd BuildRelease"
              continueOnError: false

            - task: ArchiveFiles@2
              displayName: "Archive files"
              inputs:
                rootFolderOrFile: "$(System.DefaultWorkingDirectory)/src/Petabridge.KPI.Collector.Functaculous/bin/Release/netcoreapp3.1"
                includeRootFolder: false
                archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"

            - task: PublishBuildArtifacts@1
              inputs:
                PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
                artifactName: 'drop'

            - task: GitHubRelease@0
              displayName: 'GitHub release (create)'
              inputs:
                gitHubConnection: $(githubConnectionName)
                repositoryName: $(githubRepositoryName)
                title: '$(projectName) v$(Build.SourceBranchName)'
                releaseNotesFile: 'RELEASE_NOTES.md'
                assets: |
                  $(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip